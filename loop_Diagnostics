#!/bin/bash

if [ -z "$SPINDIR" ]; then
  echo "ERROR: source env vars first"
  exit
fi

echo "removing ${DIAGSET_DIR}/*.root in 5 seconds..."
sleep 5
rm -r ${DIAGSET_DIR}/*.root

ncondor="$(condor_config_val NUM_CPUS)"
if [ -z $ncondor ]; then
  echo "<X> WARNING: this is a memory intensive job! Are you sure you want condor"
  echo "    running with all available resources? You can limit the job by lowering"
  echo "    NUM_CPUS in /etc/condor/condor_config"
  echo "    - restart condor daeomon with condor_restart -startd && watch -n1 condor_status"
  echo ""
  echo " [sleeping for 10 seconds...]"
  sleep 10
else
  echo "<X> NOTE: condor will run a maximum of $ncondor simultaneous jobs"
fi

job="kincorr.bat"
> $job

echo "building batch file..."
echo "Executable = `which root`" >> $job
echo "Universe = vanilla" >> $job
echo "notification = never" >> $job
echo "getenv = True" >> $job
echo '+Experiment = "star"' >> $job
echo '+Job_Type = "cas"' >> $job
echo "" >> $job

log="logfiles"


pushd $REDSET_DIR
ls RedOutputset*.root > LIST
popd


cnt=0

while read redfile; do
  let cnt++
  echo "Arguments = -b -q DiagnosticsOne.C(\\\"${redfile}\\\",false)" >> $job
  echo "Log    = ${log}/Diag.${redfile}.log" >> $job
  echo "Output = ${log}/Diag.${redfile}.out" >> $job
  echo "Error  = ${log}/Diag.${redfile}.err" >> $job
  echo "Queue" >> $job
  echo "" >> $job
done < ${REDSET_DIR}/LIST


rm ${REDSET_DIR}/LIST

echo "Submitting $cnt jobs to condor"
condor_submit $job
